@model IEnumerable<PersonalFinanceApp.Models.Domain.Expenses>
@{
    ViewData["Title"] = "Expenses";
}

<div class="d-flex justify-content-between">
    <h2>My Expenses</h2>
    <a class="btn btn-primary" asp-controller="Expenses" asp-action="Create">Add Expense</a>
</div>

<div class="container mt-3">
    <table class="table table-stripped table-bordered">
        <thead>
            <tr>
                <th>S/N</th>
                <th>Expense ID</th>
                <th>Description</th>
                <th>Amount</th>
                <th>Category</th>
                <th>Date</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @{
                var counter = 1;
                decimal totalAmount = 0;
            }
            @foreach (var item in Model) 
            {
                totalAmount += item.Amount;
                <tr>
                    <td>@counter</td>
                    <td>@item.Id</td>
                    <td>@item.Description</td>
                    <td>@($"₦{ item.Amount:N2}")</td>
                    <td>@item.Category</td>
                    <td>@item.Date.ToString("dd-MM-yyyy")</td>
                    <td>
                        <a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-sm btn-outline-primary me-1" title="Edit">
                            <i class="bi bi-pencil-square"></i>
                        </a>
                        <form asp-action="Delete" asp-route-id="@item.Id" method="post" class="d-inline">
                            <button type="submit" class="btn btn-sm btn-outline-danger" title="Delete"
                                    onclick="return confirm('Are you sure you want to delete this expense?');">
                                <i class="bi bi-trash"></i>
                            </button>
                        </form>
                    </td>
                </tr>
                counter++;
            }
            <tr>
                <td></td>
                <td></td>
                <td></td>
                <td class="fw-bold">@($"₦{totalAmount:N2}")</td>
                <td></td>
                <td></td>
            </tr>
        </tbody>
    </table>
</div>

<h2>Expenses Overview</h2>
<div>
    <canvas id="myChart" width="400" height="400"></canvas>
</div>

<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script src="https://cdn.jsdelivr.net/npm/chartjs-plugin-datalabels@2"></script>

<script>
    const ctx = document.getElementById('myChart');

    fetch('/Expenses/GetChart')
        .then(response => response.json())
        .then(data => {
            console.log('Chart data:', data); 

            // Check if data exists
            if (!data || data.length === 0) {
                console.warn('No chart data returned');
                return;
            }

            // Create the chart
            new Chart(ctx, {
                type: 'pie',
                data: {
                    labels: data.map(d => d.category),
                    datasets: [{
                        data: data.map(d => d.total),
                        backgroundColor: [
                            '#FF6384',
                            '#36A2EB',
                            '#FFCE56',
                            '#4BC0C0',
                            '#9966FF',
                            '#FF9F40'
                        ]
                    }]
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: false,
                    plugins: {
                        legend: {
                            position: 'bottom'
                        },
                        title: {
                            display: true,
                            text: 'Expenses by Category'
                        },
                        datalabels: {
                            color: '#fff',
                            // Display both category and formatted amount value on the chart
                            formatter: (value, context) => {
                                const category = context.chart.data.labels[context.dataIndex];
                                return `${category}: ₦${value.toLocaleString('en-NG')}`;
                            },
                            font: {
                                weight: 'bold'
                            }
                        }
                    }
                },
                plugins: [ChartDataLabels] 
            });
        })
        .catch(error => console.error('Error fetching chart data:', error));
</script>
